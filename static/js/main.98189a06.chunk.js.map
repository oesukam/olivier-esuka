{"version":3,"sources":["images/profile.jpg","components/NotFound/NotFound.js","components/NavBar/NavBar.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NotFound","react_default","a","createElement","id","className","Navbar","role","href","aria-hidden","react_router_dom","to","Home","src","profile","alt","target","rel","App","basename","NavBar_NavBar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98189a06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.6500c951.jpg\";","import React from \"react\";\nimport \"./NotFound.css\";\n\nconst NotFound = () => (\n  <section id=\"not-found\">\n    <div className=\"hero is-fullheight is-info\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title is-1\">\n            4 <i className=\"fa fa-ban\" /> 4\n          </h1>\n\n          <h4 className=\"title is-4\">\n            The page you are looking for was not found\n          </h4>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\n\nconst Navbar = () => (\n  <div className=\"container\" id=\"top-nav-bar\">\n    <nav className=\"navbar\" role=\"navigation\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"/\">\n          <span className=\"title is-5 first-name\">Olivier</span>\n          <span className=\"title is-5 last-name\">Esuka</span>\n        </a>\n\n        <button className=\"navbar-burger burger\">\n          <span aria-hidden=\"true\" />\n          <span aria-hidden=\"true\" />\n          <span aria-hidden=\"true\" />\n        </button>\n      </div>\n\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n          <Link to=\"/\" className=\"navbar-item\">\n            Home\n          </Link>\n          <Link to=\"/resume\" className=\"navbar-item\">\n            Resume\n          </Link>\n          <Link to=\"/contact\" className=\"navbar-item\">\n            Contact\n          </Link>\n        </div>\n      </div>\n    </nav>\n  </div>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport profile from \"../../images/profile.jpg\";\nimport \"./Home.css\";\n\nconst Home = () => (\n  <div className=\"hero is-fullheight\">\n    <div className=\"hero-body\">\n      <div className=\"container v-centered\">\n        <div className=\"columns\">\n          <div className=\"column has-text-centered\">\n            <img src={profile} className=\"profile-image\" alt=\"My profile\" />\n          </div>\n          <div className=\"column\">\n            <h1 className=\"title is-1\">I'M Olivier Esuka</h1>\n            <h3 className=\"title is-3\">Software Engineer - 4 Years</h3>\n            <hr />\n\n            <p className=\"about-me\">\n              A Fullstack developer who enjoys solvings problems anbd building\n              products.\n            </p>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <Link\n                  to=\"/resume\"\n                  className=\"button is-info is-large is-fullwidth\"\n                >\n                  RESUME\n                </Link>\n              </div>\n              <div className=\"column\">\n                <Link\n                  to=\"/contact\"\n                  className=\"button is-light is-large is-fullwidth\"\n                >\n                  Contact\n                </Link>\n              </div>\n            </div>\n            <p className=\"social-icons\">\n              <a\n                href=\"https://github.com/oesukam\"\n                target=\"_blank\"\n                className=\"social-icon\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-github\" />\n              </a>\n              <a\n                href=\"https://twitter.com/oesukam\"\n                target=\"_blank\"\n                className=\"social-icon\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-twitter\" />\n              </a>\n              <a\n                href=\"https://facebook.com/oesuka\"\n                target=\"_blank\"\n                className=\"social-icon\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-facebook\" />\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NotFound from \"./components/NotFound/NotFound\";\nimport Navbar from \"./components/NavBar/NavBar\";\nimport Home from \"./pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HashRouter basename=\"/\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}